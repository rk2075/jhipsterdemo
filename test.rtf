
//product / services table
//relationship is explained down
entity ProductServiceDef {
	name String,
	majorCategory String,
    minorCategory String,
    seasons String,
    types String,
    make String,
    grade String,
}
//market price channels
entity MarketPriceDef{
	name String,
	marketChannels String,
	marketLocations String,
	marketSegments String,
	gender String,
	age String,
	seasons String,
	priceRanges String
}
//for each quarter / month, they create
//case - period specify the vlaues
entity DoodilCases{
	name String,
    desc String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}
//multiple products - product will be
//linked to marketpricedef, genprocess chain
entity DoodilEntryData{
    quantity Double,
    cost Double
}

entity DoodilEntryPrices{
	quantity Double,
    price Double,
    marketChainName String
}
entity DoodilEntryPeriods{
	quarterName String,
    quarterValue String
}

entity DoodilEntryProcessChains{
}

entity DoodilEntry{
	name String,
    desc String,
    period String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

//extended information about user
//which industry user / company belogs to
//one to one relationship with user
entity CompanyInfo{
	companyName String,
    companyDesc String,
    companyLogoPath String,
    industry String,
    phoneNumber String
}

//variables and values will be
//stored in this
//referenceId and value will be
//table reference id and the unique id of the table
entity GenKeyValue{
	keyVar String,
    keyVal String,
    referenceId Integer,
    referenceValue Integer,
    category String,
    remarks String
}

//keyvars - concatenated key variables
//for the process chain
entity GenProcessChains{
	chainName String,
    chainDesc String,
    category String,
    createTime ZonedDateTime,
    updateTime ZonedDateTime
}

entity GPChainFormulaVars{
	inputVarName String,
    keyVarFlag String,
}

entity ProcessVars{
	varName String,
    varDesc String,
    category String
}

entity GenProcessChainFormula{
	strFormula String,
    strEuation String,
    derivedVar String,
    parentId Integer
}

relationship ManyToOne {
    DoodilCases{user(login)} to User,
    DoodilEntry{user(login)} to User,
    ProductServiceDef{user(login)} to User,
    MarketPriceDef{user(login)} to User,
    ProcessVars{user(login)} to User,
    GenProcessChains{user(login)} to User,
    DoodilEntry{dePeriod(id)} to DoodilEntryPeriods,
    DoodilEntryData{doodilEntry(id)} to DoodilEntry,
 	DoodilEntryData{psDef(id)} to ProductServiceDef,
    DoodilEntryPrices{mpDef(id)} to MarketPriceDef,
    DoodilEntryPrices{doodilEntry(id)} to DoodilEntry,
    DoodilEntryProcessChains{deData(id)} to DoodilEntryData,
    GenProcessChainFormula{gpChainsId(id)} to GenProcessChains,
    GPChainFormulaVars{gpcFormulaId(id)} to GenProcessChainFormula,
    DoodilEntryProcessChains{gpChainsId(id)} to GenProcessChains,
    CompanyInfo{user(login)} to User
}



// Set pagination options
paginate ProductServiceDef, MarketPriceDef with infinite-scroll

dto * with mapstruct



